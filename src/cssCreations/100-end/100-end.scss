.end {
  @include frame();

  --color-background: #272c34;
  --color-dark: #000000;
  --color-light: #ffffff;
  --width: 80%;
  --height: 33%;
  --animation-duration: 6s;
  $iterations-per-side: 6;

  // Calculations
  $line-thickness-ratio: 0.73;
  --animation-delay-unit: calc(1s / 6);
  $box-shadow-semicircle-light: 0 0 1rem rgba(255, 255, 255, 0.5);
  $box-shadow-semicircle-dark: 0 0 1rem #272c34;
  $box-shadow-semicircle-inset-light: inset 0 0 1rem rgba(255, 255, 255, 0.5);
  $box-shadow-semicircle-inset-dark: inset 0 0 1rem #272c34;

  @mixin end-line($length, $direction: 'vertical') {
    @if $direction == 'vertical' {
      width: 10%;
      height: $length;
    } @else {
      width: $length;
      height: 10% * $line-thickness-ratio;
    }
  }

  background-color: var(--color-background);
  display: flex;
  align-items: center;
  justify-content: center;

  .center {
    width: var(--width);
    height: var(--height);
    display: flex;
    justify-content: space-between;
  }

  .letter {
    width: 25%;
    height: 100%;
    position: relative;
  }

  .line {
    border-radius: 1rem;
    background-color: var(--color-light);
    box-shadow: 0 0 1rem var(--color-light);
    animation: {
      name: end-letters;
      duration: var(--animation-duration);
      iteration-count: infinite;
      direction: alternate;
      fill-mode: both;
    }
    position: absolute;
    width: 10%;
  }

  .e {
    // left vertical
    .e1 {
      @include end-line(100%, 'vertical');
    }

    // top horizontal
    .e2 {
      @include end-line(80%, 'horizontal');
      left: 20%;
      animation-delay: calc(var(--animation-delay-unit) * 6);
    }

    // middle horizontal
    .e3 {
      @include end-line(70%, 'horizontal');
      top: 50%;
      left: 20%;
      transform: translateY(-50%);
      animation-delay: calc(var(--animation-delay-unit) * 9);
    }

    // bottom horizontal
    .e4 {
      @include end-line(80%, 'horizontal');
      left: 20%;
      bottom: 0;
      animation-delay: calc(var(--animation-delay-unit) * 6);
    }
  }

  .n {
    // left vertical
    .n1 {
      @include end-line(100%, 'vertical');
      animation-delay: calc(var(--animation-delay-unit) * 9);
    }

    // right vertical
    .n2 {
      @include end-line(100%, 'vertical');
      right: 0;
      animation-delay: calc(var(--animation-delay-unit) * 9);
    }

    // top horizontal
    .n3 {
      @include end-line(15%, 'horizontal');
      left: 20%;
      animation-delay: calc(var(--animation-delay-unit) * 12);
    }

    // middle top vertical
    .n4 {
      @include end-line(15%, 'horizontal');
      right: 20%;
      bottom: 0;
      animation-delay: calc(var(--animation-delay-unit) * 12);
    }

    // middle bottom vertical
    .n5 {
      @include end-line(30%, 'vertical');
      left: 45%;
      animation-delay: calc(var(--animation-delay-unit) * 12);
    }

    // bottom horizontal
    .n6 {
      @include end-line(30%, 'vertical');
      right: 45%;
      bottom: 0;
      animation-delay: calc(var(--animation-delay-unit) * 12);
    }
  }

  .d {
    // left vertical
    .d1 {
      @include end-line(100%, 'vertical');
      animation-delay: calc(var(--animation-delay-unit) * 15);
    }

    .flex-center {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .semicircle-container {
      width: 80%;
      height: 120%;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }

    .d2-outer {
      right: 0;
      overflow: hidden;
    }

    .d2-inner {
      background-color: var(--color-light);
      width: 160%;
      height: calc(100% / 120 * 100);
      position: absolute;
      top: 50%;
      right: 20%;
      transform: translateY(-50%);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: $box-shadow-semicircle-light;
      animation: {
        name: end-semicircle;
        duration: var(--animation-duration);
        iteration-count: infinite;
        direction: alternate;
        fill-mode: both;
        delay: calc(var(--animation-delay-unit) * 18);
      }

      &::before {
        content: '';
        width: 85%;
        height: calc(100% - 10% * #{$line-thickness-ratio} * 2 + 1%);
        background-color: var(--color-background) !important;
        border-radius: 50%;
        box-shadow: inset 0 0 0.4rem rgba(255, 255, 255, 0.5);
        animation: inherit;
        animation-name: end-box-shadow;
      }
    }
  }

  @keyframes end-letters {
    $interval: 1%;
    @for $i from 0 to $iterations-per-side {
      $i: $i * 2;

      #{50% + $interval * $i} {
        background-color: var(--color-light);
        box-shadow: 0 0 1rem var(--color-light);
      }

      #{50% + $interval * ($i + 1)} {
        background-color: var(--color-dark);
        box-shadow: 0 0 1rem var(--color-background);
      }
    }

    100% {
      background-color: var(--color-dark);
      box-shadow: 0 0 1rem var(--color-background);
    }
  }

  @keyframes end-box-shadow {
    $interval: 1%;
    @for $i from 0 to $iterations-per-side {
      $i: $i * 2;

      #{50% + $interval * $i} {
        box-shadow: $box-shadow-semicircle-inset-light;
      }

      #{50% + $interval * ($i + 1)} {
        box-shadow: $box-shadow-semicircle-inset-dark;
      }
    }

    100% {
      box-shadow: $box-shadow-semicircle-inset-dark;
    }
  }

  @keyframes end-semicircle {
    $interval: 1%;
    @for $i from 0 to $iterations-per-side {
      $i: $i * 2;

      #{50% + $interval * $i} {
        background-color: var(--color-light);
        box-shadow: $box-shadow-semicircle-light;
      }

      #{50% + $interval * ($i + 1)} {
        background-color: var(--color-dark);
        box-shadow: $box-shadow-semicircle-dark;
      }
    }

    100% {
      background-color: var(--color-dark);
      box-shadow: $box-shadow-semicircle-dark;
    }
  }
}
